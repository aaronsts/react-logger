{"version":3,"sources":["components/ExpenseItem.jsx","components/Filter.jsx","components/ChartBar.jsx","components/Chart.jsx","components/ExpenseList.jsx","components/Form.jsx","App.js","index.js"],"names":["ExpenseItem","props","date","day","toLocaleString","month","year","getFullYear","className","description","amount","Filter","value","initialYear","onChange","e","onChangeFilter","target","ChartBar","barHeight","maxValue","Math","round","console","log","style","height","label","Chart","dataPoints","expenses","expense","getMonth","values","map","dataPoint","max","ExpenseList","useState","filterValue","setFilterValue","filteredExpenses","filter","toString","selectedYear","length","item","title","id","Form","enteredText","setEnteredText","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSubmitData","type","event","min","step","INIT_EXPENSES","random","App","setExpenses","newExpenseData","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db1ed22f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ExpenseItem(props) {\n  const date = {\n    day: props.date.toLocaleString(\"en-US\", { day: \"2-digit\" }),\n    month: props.date.toLocaleString(\"en-US\", { month: \"long\" }),\n    year: props.date.getFullYear(),\n  };\n\n  return (\n    <div className=\"expense-item\">\n      <div className=\"item-date\">\n        <div className=\"day\">{date.day}</div>\n        <div>{date.month}</div>\n        <div>{date.year}</div>\n      </div>\n      <div className=\"item-info\">\n        <h2 className=\"expense-item-description\">{props.description}</h2>\n        <p className=\"expense-item-price\">{props.amount} euro</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpenseItem;\n","const Filter = (props) => {\n  const changeYearHandler = (e) => {\n    props.onChangeFilter(e.target.value);\n  };\n\n  return (\n    <div className=\"filter-control\">\n      <label>Filter by year</label>\n      <select value={props.initialYear} onChange={changeYearHandler}>\n        <option value=\"2022\">2022</option>\n        <option value=\"2021\">2021</option>\n        <option value=\"2020\">2020</option>\n        <option value=\"2019\">2019</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst ChartBar = (props) => {\n  let barHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n    console.log(barHeight);\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar-inner\">\n        <div className=\"chart-bar-fill\" style={{ height: barHeight }}></div>\n      </div>\n      <div className=\"chart-bar-label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  // Add all expenses from current month\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    dataPoints[expenseMonth].value += expense.amount;\n  }\n\n  // Add all values from current year\n  let values = dataPoints.map((dataPoint) => dataPoint.value);\n  let maxValue = Math.max(...values);\n\n  return (\n    <div className=\"chart\">\n      {dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          maxValue={maxValue}\n          value={dataPoint.value}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState } from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem.jsx\";\nimport Filter from \"./Filter\";\nimport Chart from \"./Chart.jsx\";\n\nconst ExpenseList = (props) => {\n  // State\n  const [filterValue, setFilterValue] = useState(\"2020\");\n\n  // Handlers\n  const filterValueHandler = (selectedYear) => {\n    setFilterValue(selectedYear);\n    console.log(selectedYear);\n  };\n\n  const filteredExpenses = props.expenses.filter((expenses) => {\n    return expenses.date.getFullYear().toString() === filterValue;\n  });\n\n  return (\n    <div className=\"expenses-list\">\n      <Filter initialYear={filterValue} onChangeFilter={filterValueHandler} />\n      <Chart expenses={filteredExpenses} />\n\n      <div className=\"expenses\">\n        {filteredExpenses.length === 0 ? (\n          <p>No expenses found.</p>\n        ) : (\n          filteredExpenses.map((item) => {\n            return (\n              <ExpenseItem\n                description={item.title}\n                amount={item.amount}\n                date={item.date}\n                key={item.id}\n              />\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseList;\n","import React, { useState } from \"react\";\n\nconst Form = (props) => {\n  // State\n  const [enteredText, setEnteredText] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  // Handlers\n  const textChangeHandler = (event) => {\n    setEnteredText(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title: enteredText,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSubmitData(expenseData);\n\n    setEnteredText(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"form-input\">\n        <label>Title</label>\n        <input type=\"text\" value={enteredText} onChange={textChangeHandler} />\n      </div>\n      <div className=\"form-input\">\n        <label>Amount</label>\n        <input\n          type=\"number\"\n          value={enteredAmount}\n          min=\"0.01\"\n          step=\"0.01\"\n          onChange={amountChangeHandler}\n        />\n      </div>\n      <div className=\"form-input\">\n        <label>Date</label>\n        <input\n          type=\"date\"\n          value={enteredDate}\n          min=\"2018-01-01\"\n          max=\"2022-12-31\"\n          onChange={dateChangeHandler}\n        />\n      </div>\n      <div className=\"form-input\">\n        <input className=\"submit-btn\" type=\"submit\" value=\"submit\" />\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useState } from \"react\";\n// Components\nimport ExpenseList from \"./components/ExpenseList\";\nimport Form from \"./components/Form\";\n\n// styles\nimport \"./components/app.scss\";\n\nconst INIT_EXPENSES = [\n  {\n    title: \"book\",\n    amount: 12.99,\n    date: new Date(\"2021\", \"1\", \"06\"),\n    id: Math.random().toString(),\n  },\n  {\n    title: \"Toothpaste\",\n    amount: 13.99,\n    date: new Date(\"2020\", \"2\", \"16\"),\n    id: Math.random().toString(),\n  },\n  {\n    title: \"Vitamines\",\n    amount: 34.99,\n    date: new Date(\"2020\", \"3\", \"06\"),\n    id: Math.random().toString(),\n  },\n  {\n    title: \"Movie Rental\",\n    amount: 3.99,\n    date: new Date(\"2020\", \"2\", \"18\"),\n    id: Math.random().toString(),\n  },\n  {\n    title: \"Groceries\",\n    amount: 44.99,\n    date: new Date(\"2020\", \"4\", \"22\"),\n    id: Math.random().toString(),\n  },\n  {\n    title: \"New Car\",\n    amount: 5299,\n    date: new Date(\"2019\", \"2\", \"16\"),\n    id: Math.random().toString(),\n  },\n  {\n    title: \"toothpaste\",\n    amount: 1.99,\n    date: new Date(\"2022\", \"1\", \"06\"),\n    id: Math.random().toString(),\n  },\n  {\n    title: \"book 2\",\n    amount: 22.99,\n    date: new Date(\"2021\", \"4\", \"06\"),\n    id: Math.random().toString(),\n  },\n];\n\nfunction App() {\n  // State\n  const [expenses, setExpenses] = useState(INIT_EXPENSES);\n\n  const onSubmitData = (newExpenseData) => {\n    const expense = {\n      ...newExpenseData,\n      id: Math.random().toString(),\n    };\n\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <Form onSubmitData={onSubmitData} />\n      <ExpenseList expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}